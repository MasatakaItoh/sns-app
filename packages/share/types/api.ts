/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/posts": {
    /** 投稿を作成する */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Post"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Post"];
          };
        };
        /** @description Not Found */
        404: never;
        /** @description Internal Server Error */
        500: never;
      };
    };
  };
  "/api/posts/{id}": {
    /** 投稿を取得する */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Post"];
          };
        };
        /** @description Not Found */
        404: never;
        /** @description Internal Server Error */
        500: never;
      };
    };
    /** 投稿を更新する */
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Post"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /**
         * @description 以下の条件を満たさない場合、Forbidden
         * - リクエストユーザー自身の投稿
         */
        403: never;
        /** @description Not Found */
        404: never;
        /** @description Internal Server Error */
        500: never;
      };
    };
    /** 投稿を削除する */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            userId: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /**
         * @description 以下の条件を満たさない場合、Forbidden
         * - リクエストユーザー自身の投稿
         */
        403: never;
        /** @description Not Found */
        404: never;
        /** @description Internal Server Error */
        500: never;
      };
    };
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/api/posts/{id}/likes": {
    /** 投稿にいいねする */
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            userId: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Found */
        404: never;
        /** @description Internal Server Error */
        500: never;
      };
    };
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/api/posts/timeline/{userId}": {
    /** タイムラインの投稿を取得する */
    get: {
      parameters: {
        path: {
          userId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            userId: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": (components["schemas"]["Post"])[];
          };
        };
        /** @description Not Found */
        404: never;
        /** @description Internal Server Error */
        500: never;
      };
    };
    parameters: {
      path: {
        userId: string;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Error */
    Error: {
      /** @description エラーメッセージ */
      error?: (string)[];
    };
    /** 投稿 */
    Post: {
      userId: string;
      desc?: string;
      img?: string;
      likes?: (unknown)[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
